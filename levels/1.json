{
  "hr": [
    {
      "query_id": "hr_l1_1",
      "query": "What is the email address of Alice Johnson?",
      "expected_response": {
        "email": "alice.johnson@example.com"
      },
      "explanation": "Simple query retrieving a specific field from a single employee record.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "hr_employees",
            "filter": "(first_name='Alice') AND (last_name='Johnson')"
          }
        }
      ],
      "sample_solution": "Query HR_EMPLOYEES to find Alice Johnson and return her email address."
    },
    {
      "query_id": "hr_l1_2",
      "query": "How many departments do we have in the company?",
      "expected_response": {
        "department_count": 20
      },
      "explanation": "Basic count query on a single table with no filtering needed.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "hr_departments"
          }
        }
      ],
      "sample_solution": "Query HR_DEPARTMENTS and count the total number of records."
    },
    {
      "query_id": "hr_l1_3",
      "query": "List all department policies that were effective from January to June 2023.",
      "expected_response": {
        "policies": [
          {
            "policy_id": 15,
            "title": "Logistics Policy",
            "effective_date": "2023-03-01"
          },
          {
            "policy_id": 16,
            "title": "Business Development Policy",
            "effective_date": "2023-04-01"
          },
          {
            "policy_id": 17,
            "title": "Strategy Policy",
            "effective_date": "2023-05-01"
          },
          {
            "policy_id": 18,
            "title": "Compliance Policy",
            "effective_date": "2023-06-01"
          }
        ]
      },
      "explanation": "Filtering query that checks date ranges in a single table.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "hr_policies",
            "filter": "(effective_date >= '2023-01-01') AND (effective_date <= '2023-06-30')"
          }
        }
      ],
      "sample_solution": "Query HR_POLICIES and filter for records where effective_date is between 2023-01-01 and 2023-06-30."
    },
    {
      "query_id": "hr_l1_4",
      "query": "List all employees who joined in 2023.",
      "expected_response": {
        "employees": [
          { "employee_id": 13, "first_name": "Mia", "last_name": "White" },
          { "employee_id": 14, "first_name": "Noah", "last_name": "Harris" },
          { "employee_id": 15, "first_name": "Olivia", "last_name": "Martin" },
          { "employee_id": 16, "first_name": "Peter", "last_name": "Thompson" },
          { "employee_id": 17, "first_name": "Quinn", "last_name": "Garcia" },
          { "employee_id": 18, "first_name": "Riley", "last_name": "Martinez" },
          {
            "employee_id": 19,
            "first_name": "Sophia",
            "last_name": "Robinson"
          },
          { "employee_id": 20, "first_name": "Tyler", "last_name": "Clark" }
        ]
      },
      "explanation": "Filtering query that requires checking the date_joined field for all employees.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "hr_employees",
            "filter": "date_joined LIKE '2023-%'"
          }
        }
      ],
      "sample_solution": "Query HR_EMPLOYEES and filter for records where date_joined starts with '2023'."
    },
    {
      "query_id": "hr_l1_5",
      "query": "How many managers do we have in the company?",
      "expected_response": {
        "manager_count": 5
      },
      "explanation": "Simple count query with a filter condition on the role field.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "hr_employees",
            "filter": "role='Manager'"
          }
        }
      ],
      "sample_solution": "Query HR_EMPLOYEES and count records where role = 'Manager'."
    }
  ],
  "finance": [
    {
      "query_id": "finance_l1_1",
      "query": "What was the total revenue in Q4 2022?",
      "expected_response": {
        "total_revenue": 6000
      },
      "explanation": "Basic aggregation query that sums up revenue for a specific quarter and year.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "finance_revenues",
            "filter": "(quarter=4) AND (year=2022)"
          }
        }
      ],
      "sample_solution": "Query FINANCE_REVENUES with filter for quarter=4 and year=2022, then sum up all revenue_amount values."
    },
    {
      "query_id": "finance_l1_2",
      "query": "How many products are in the Electronics category?",
      "expected_response": {
        "product_count": 7
      },
      "explanation": "Basic count query that filters products by a specific category.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "finance_products",
            "filter": "category='Electronics'"
          }
        }
      ],
      "sample_solution": "Query FINANCE_PRODUCTS with filter for category='Electronics', then count the number of products returned."
    },
    {
      "query_id": "finance_l1_3",
      "query": "What is the total amount spent on Capital expenses in 2022?",
      "expected_response": {
        "total_amount": 2000
      },
      "explanation": "Filtering and aggregation query that sums expenses of a specific category within a year range.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "finance_expenses",
            "filter": "(category='Capital') AND (expense_date LIKE '2022-%')"
          }
        }
      ],
      "sample_solution": "Query FINANCE_EXPENSES with filter for category='Capital' and expense_date starting with '2022-', then sum up the amount values."
    },
    {
      "query_id": "finance_l1_4",
      "query": "What was the revenue amount for Product 10?",
      "expected_response": {
        "revenue_amount": 1500
      },
      "explanation": "Simple lookup query that retrieves financial information for a specific product.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "finance_revenues",
            "filter": "product_id=10"
          }
        }
      ],
      "sample_solution": "Query FINANCE_REVENUES with filter for product_id=10 and return the revenue_amount."
    },
    {
      "query_id": "finance_l1_5",
      "query": "What are the top 3 highest expenses in 2023?",
      "expected_response": {
        "expenses": [
          {
            "expense_id": 19,
            "description": "Expense 19: Event Sponsorship",
            "amount": 1000
          },
          {
            "expense_id": 18,
            "description": "Expense 18: Software Upgrade",
            "amount": 900
          },
          {
            "expense_id": 17,
            "description": "Expense 17: Travel",
            "amount": 700
          }
        ]
      },
      "explanation": "Query that requires filtering, sorting, and limiting results.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "finance_expenses",
            "filter": "expense_date LIKE '2023-%'",
            "order_field": "amount DESC",
            "limit": 3
          }
        }
      ],
      "sample_solution": "Query FINANCE_EXPENSES with filter for expense_date starting with '2023-', sort by amount in descending order, and limit to 3 results."
    }
  ],
  "ops": [
    {
      "query_id": "ops_l1_1",
      "query": "How many machines are currently active?",
      "expected_response": {
        "active_machines": 11
      },
      "explanation": "Simple count query with status filtering.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "ops_machines",
            "filter": "status='Active'"
          }
        }
      ],
      "sample_solution": "Query OPS_MACHINES and count records where status='Active'."
    },
    {
      "query_id": "ops_l1_2",
      "query": "What is the current status of Machine 5?",
      "expected_response": {
        "machine_name": "Machine 5",
        "status": "Active"
      },
      "explanation": "Basic lookup query that retrieves a specific field from a single machine record.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "ops_machines",
            "filter": "machine_id=5"
          }
        }
      ],
      "sample_solution": "Query OPS_MACHINES with filter for machine_id=5 and return the status field."
    },
    {
      "query_id": "ops_l1_3",
      "query": "List all machines installed in 2022.",
      "expected_response": {
        "machines": [
          {
            "machine_id": 13,
            "machine_name": "Machine 13",
            "location": "Fort Worth"
          },
          {
            "machine_id": 14,
            "machine_name": "Machine 14",
            "location": "Columbus"
          },
          {
            "machine_id": 15,
            "machine_name": "Machine 15",
            "location": "Charlotte"
          },
          {
            "machine_id": 16,
            "machine_name": "Machine 16",
            "location": "San Francisco"
          },
          {
            "machine_id": 17,
            "machine_name": "Machine 17",
            "location": "Indianapolis"
          },
          {
            "machine_id": 18,
            "machine_name": "Machine 18",
            "location": "Seattle"
          },
          {
            "machine_id": 19,
            "machine_name": "Machine 19",
            "location": "Denver"
          },
          {
            "machine_id": 20,
            "machine_name": "Machine 20",
            "location": "Washington"
          }
        ]
      },
      "explanation": "Filtering query that checks date ranges in a single table.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "ops_machines",
            "filter": "installation_date LIKE '2022-%'"
          }
        }
      ],
      "sample_solution": "Query OPS_MACHINES and filter for records where installation_date starts with '2022-'."
    },
    {
      "query_id": "ops_l1_4",
      "query": "How many maintenance actions involved part replacements in 2023?",
      "expected_response": {
        "replacement_count": 2
      },
      "explanation": "Count query with multiple filter conditions.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "ops_maintenance",
            "filter": "(maintenance_action='Replaced part') AND (maintenance_date LIKE '2023-%')"
          }
        }
      ],
      "sample_solution": "Query OPS_MAINTENANCE and count records where maintenance_action='Replaced part' and maintenance_date starts with '2023-'."
    },
    {
      "query_id": "ops_l1_5",
      "query": "Which machines are currently under maintenance?",
      "expected_response": {
        "machines": [
          {
            "machine_id": 2,
            "machine_name": "Machine 2",
            "location": "Los Angeles"
          },
          {
            "machine_id": 6,
            "machine_name": "Machine 6",
            "location": "Philadelphia"
          },
          {
            "machine_id": 11,
            "machine_name": "Machine 11",
            "location": "Austin"
          },
          {
            "machine_id": 16,
            "machine_name": "Machine 16",
            "location": "San Francisco"
          }
        ]
      },
      "explanation": "Simple filter query on a single status value.",
      "tools_needed": ["get_table_records"],
      "expected_tool_calls": [
        {
          "tool": "get_table_records",
          "params": {
            "table_name": "ops_machines",
            "filter": "status='Maintenance'"
          }
        }
      ],
      "sample_solution": "Query OPS_MACHINES with filter for status='Maintenance' and return the results."
    }
  ]
}
